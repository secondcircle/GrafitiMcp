version: '3.8'

services:
  # Neo4j database - stores the knowledge graph
  neo4j:
    image: neo4j:5.26-community
    ports:
      - "8044:7687"  # Bolt protocol
    volumes:
      - graphiti_neo4j_data:/data
    environment:
      - NEO4J_AUTH=neo4j/Anything49031!
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "http://localhost:7474" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always

  # Graphiti API - provides the core graph functionality
  graphiti:
    image: zepai/graphiti:latest
    ports:
      - "8080:8000"  # Graphiti API
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=
      - MODEL_NAME=gpt-4o
    depends_on:
      - neo4j
    restart: always

  # Graphiti MCP Server - provides the Model Context Protocol interface
  graphiti-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8001:8000"  # MCP server with SSE transport
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MODEL_NAME=${MODEL_NAME:-gpt-4o}
      - PATH=/root/.local/bin:${PATH}
    command: ["uv", "run", "graphiti_mcp_server.py", "--transport", "sse"]
    depends_on:
      neo4j:
        condition: service_healthy
      graphiti:
        condition: service_started
    restart: always

volumes:
  graphiti_neo4j_data: